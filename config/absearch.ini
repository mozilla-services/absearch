[absearch]

# WSGI adapter.
server = auto

# the host to start the web service.
host = 0.0.0.0

# the port to start the web service
port = 8080

# if debug is 1 we get tracebacks into the web views
debug = 1

# if quiet is 1, log output is limited
# quiet = 0

# this is the name of the file containing the settings
config = config.json

# this is the name of the file with the schema that
# is used to validate the settings file structure
schema = config.schema.json

# max age defines in seconds how often the app
# reads the settings in S3 to update its memory copy
max_age = 3600

# pick a backend (aws or directory)
# then set things in the dedicated section
backend = directory

counter = memory

[directory]
# the path where the files are to be found
path = data

[aws]
# the bucket where the data is stored
bucketname = absearch
region = eu-west-1

# if is_secure is set to 1, we use https.
is_secure = 1

# if set to 1, uses path-styles buckets
# if set to 0, uses dns-style buckets
# set this to 0 in production, to 1 in the tests
use_path_style = 0

# if host and port are provided, they override region
# and are use to access AWS
# host = 0.0.0.0
# port = 5000

# socket timeouts for AWS calls
timeout = 5.0

# number of retries before the call fails
num_retries = 1


[statsd]
host = localhost
port = 8125
prefix = absearch
# by default set to 1. If set to 0, uses plain statsd
datadog = 1

[sentry]
enabled = 0
dsn = http://public:secret@example.com/1

# logging sections
# to understand how to configure them
# read https://docs.python.org/2.6/library/logging.html#configuring-logging
[loggers]
keys=root,absearch,request.summary

[handlers]
keys=consoleHandler

[formatters]
keys=generic,mozlog

[logger_root]
level=DEBUG
handlers=consoleHandler

[logger_absearch]
level=DEBUG
handlers=consoleHandler
qualname=absearch
propagate=0

[logger_request.summary]
level=INFO
handlers=consoleHandler
qualname=request.summary

[handler_consoleHandler]
class=StreamHandler
level=DEBUG
formatter=mozlog
args=(sys.stdout,)

[formatter_generic]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=

[formatter_mozlog]
class = dockerflow.logging.JsonLogFormatter
